rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ‚úÖ Helpers
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && (
        request.auth.token.role == 'admin' ||
        get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }

    // üéµ Songs (root)
    match /songs/{songId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // üéº Tracks
    match /tracks/{trackId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // üíø Albums and nested songs
    match /albums/{albumId} {
      allow read: if true;
      allow write: if isAdmin();

      match /songs/{songId} {
        allow read: if true;
        allow write: if isAdmin();
      }
    }

    // üé§ Artists and followers
    match /artists/{artistId} {
      allow read: if true;
      allow write: if isAdmin();

      match /followers/{userId} {
        allow read: if true;
        allow write: if isOwner(userId);
      }
    }

    // üë§ Public Profiles and following artists
    match /profiles/{userId} {
      allow read: if resource.data.isProfilePublic == true || isOwner(userId);
      allow write: if isOwner(userId);

      match /followingArtists/{artistId} {
        allow read, write: if isOwner(userId);
      }
    }

    // üéß Public Playlists
    match /playlists/{playlistId} {
      allow read, write: if isSignedIn() && request.auth.uid == request.resource.data.ownerId;
    }

    // üîê Private Users Tree
    match /users/{userId} {
      allow read, write: if isOwner(userId);

      match /likedSongs/{songId} {
        allow read, write: if isOwner(userId);
      }

      match /savedAlbums/{albumId} {
        allow read, write: if isOwner(userId);
      }

      match /playlists/{playlistId} {
        allow read, write: if isOwner(userId);
      }
    }

    // ‚úÖ Allow public read on all songs subcollections (for collectionGroup search)
    match /{path=**}/songs/{songId} {
      allow read: if true;
    }

    // ‚õî Catch-all: deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
